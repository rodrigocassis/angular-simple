const { createDynamoDBClient, createTable } = require('./dynamodb');

describe('DynamoDB', () => {
  describe('createDynamoDBClient', () => {
    it('should return an instance of DynamoDBClient', () => {
      const client = createDynamoDBClient();
      expect(client instanceof DynamoDBClient).toBe(true);
    });

    it('should use the region and endpoint from config', () => {
      const client = createDynamoDBClient();
      expect(client.config.region).toBe(config.REGIAO);
      expect(client.config.endpoint).toBe('http://localhost:8000');
    });
  });

  describe('createTable', () => {
    it('should call client.send with the expected parameters', async () => {
      const client = {
        send: jest.fn().mockResolvedValue({}),
      };

      await createTable(client);

      const expectedParams = {
        TableName: 'nome-da-tabela',
        AttributeDefinitions: [
          {
            AttributeName: 'nom_sgto_nego',
            AttributeType: 'S',
          },
        ],
        KeySchema: [
          {
            AttributeName: 'nom_sgto_nego',
            KeyType: 'HASH',
          },
        ],
        ProvisionedThroughput: {
          ReadCapacityUnits: 1,
          WriteCapacityUnits: 1,
        },
      };

      expect(client.send).toHaveBeenCalledWith(new CreateTableCommand(expectedParams));
    });
  });
});
